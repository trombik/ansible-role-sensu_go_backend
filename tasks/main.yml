---
# tasks file for ansible-role-sensu_go_backend

- include_vars: "{{ ansible_os_family }}.yml"

- include: "install-{{ ansible_os_family }}.yml"

- name: Create sensu_go_agent_user
  user:
    name: "{{ sensu_go_backend_user }}"
    group: "{{ sensu_go_backend_group }}"
    home: "{{ sensu_go_backend_home }}"
    create_home: yes

- name: Configure sensu_go_backend_ruby_plugins
  gem:
    name: "{{ item }}"
    user_install: "{% if sensu_go_backend_use_embedded_ruby %}no{% else %}yes{% endif %}"
    executable: "{% if sensu_go_backend_use_embedded_ruby %}{{ sensu_go_backend_embedded_ruby_gem }}{% else %}{{ ___undefined | default(omit) }}{% endif %}"
  with_items: "{{ sensu_go_backend_ruby_plugins }}"
  become: "{% if sensu_go_backend_use_embedded_ruby %}no{% else %}yes{% endif %}"
  become_user: "{{ sensu_go_backend_user }}"

- name: Create sensu_go_backend_log_dir directory
  file:
    path: "{{ sensu_go_backend_log_dir }}"
    mode: 0755
    owner: "{{ sensu_go_backend_user }}"
    group: "{{ sensu_go_backend_group }}"
    state: directory
  notify: Restart sensu_go_backend

- name: Create sensu_go_backend_state_dir directory
  file:
    path: "{{ sensu_go_backend_state_dir }}"
    mode: 0755
    owner: "{{ sensu_go_backend_user }}"
    group: "{{ sensu_go_backend_group }}"
    state: directory
  notify: Restart sensu_go_backend

- name: Create sensu_go_backend_cache_dir directory
  file:
    path: "{{ sensu_go_backend_cache_dir }}"
    mode: 0755
    owner: "{{ sensu_go_backend_user }}"
    group: "{{ sensu_go_backend_group }}"
    state: directory
  notify: Restart sensu_go_backend

- name: Create sensu_go_backend_config_dir
  file:
    path: "{{ sensu_go_backend_config_dir }}"
    mode: 0755
    state: directory

- name: Create sensu_go_backend_extra_config_files
  template:
    src: extra_config_files.j2
    dest: "{{ sensu_go_backend_config_dir }}/{{ item['name'] }}"
    state: "{{ item['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_extra_config_files }}"
  when:
    - "not 'state' in item or item['state'] == 'present'"

- name: Delete sensu_go_backend_extra_config_files
  file:
    path: "{{ sensu_go_backend_config_dir }}/{{ item['name'] }}"
    state: absent
  with_items: "{{ sensu_go_backend_extra_config_files }}"
  when:
    - "'state' in item"
    - "item['state'] == 'absent'"

- name: Create sensu_go_backend_config_fragments
  template:
    src: config_fragments.j2
    dest: "{{ sensu_go_backend_config_dir }}/{{ item['name'] }}"
    state: "{{ item['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_config_fragments }}"
  when:
    - "not 'state' in item or item['state'] == 'present'"

- name: Delete sensu_go_backend_config_fragments
  file:
    path: "{{ sensu_go_backend_config_dir }}/{{ item['name'] }}"
    state: absent
  with_items: "{{ sensu_go_backend_config_fragments }}"
  when:
    - "'state' in item"
    - "item['state'] == 'absent'"

- name: Create sensu_go_backend_conf_file
  template:
    src: sensu-backend.yml.j2
    dest: "{{ sensu_go_backend_conf_file }}"
    # validate: echo %s
  notify: Restart sensu_go_backend

- name: Start sensu_go_backend
  service:
    name: "{{ sensu_go_backend_service }}"
    state: started

- name: Include flush_handlers.yml
  # XXX workaround `[WARNING]: flush_handlers task does not support when
  # conditional`
  # https://github.com/ansible/ansible/issues/41313
  include_tasks: flush_handlers.yml
  when:
    - sensu_go_backend_flush_handlers

- name: Configure sensu_go_backend_namespaces
  sensu.sensu_go.namespace:
    auth: "{{ item['namespace']['auth'] | default(omit) }}"
    name: "{{ item['namespace']['name'] }}"
    state: "{{ item['namespace']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_namespaces }}"

- name: Configure sensu_go_backend_users
  sensu.sensu_go.user:
    auth: "{{ item['user']['auth'] | default(omit) }}"
    groups: "{{ item['user']['group'] | default(omit) }}"
    name: "{{ item['user']['name'] }}"
    password: "{{ item['user']['password'] | default(omit) }}"
    state: "{{ item['user']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_users }}"
  register: __sensu_go_backend_users_result
  changed_when: __sensu_go_backend_users_result['changed'] and not sensu_go_backend_users_ignore_changed

- name: Configure sensu_go_backend_roles
  sensu.sensu_go.role:
    auth: "{{ item['role']['auth'] | default(omit) }}"
    name: "{{ item['role']['name'] }}"
    namespace: "{{ item['role']['namespace'] | default(omit) }}"
    rules: "{{ item['role']['rules'] | default(omit) }}"
    state: "{{ item['role']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_roles }}"

- name: Configure sensu_go_backend_cluster_roles
  sensu.sensu_go.cluster_role:
    auth: "{{ item['cluster_role']['auth'] | default(omit) }}"
    name: "{{ item['cluster_role']['name'] }}"
    rules: "{{ item['cluster_role']['rules'] | default(omit) }}"
    state: "{{ item['cluster_role']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_cluster_roles }}"

- name: Configure sensu_go_backend_cluster_role_bindings
  sensu.sensu_go.cluster_role_binding:
    auth: "{{ item['cluster_role_binding']['auth'] | default(omit) }}"
    cluster_role: "{{ item['cluster_role_binding']['cluster_role'] | default(omit) }}"
    groups: "{{ item['cluster_role_binding']['groups'] | default(omit) }}"
    name: "{{ item['cluster_role_binding']['name'] }}"
    state: "{{ item['cluster_role_binding']['state'] | default(omit) }}"
    users: "{{ item['cluster_role_binding']['users'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_cluster_role_bindings }}"

- name: Configure sensu_go_backend_role_bindings
  sensu.sensu_go.role_binding:
    auth: "{{ item['role_binding']['auth'] | default(omit) }}"
    cluster_role: "{{ item['role_binding']['cluster_role'] | default(omit) }}"
    groups: "{{ item['role_binding']['groups'] | default(omit) }}"
    name: "{{ item['role_binding']['name'] }}"
    namespace: "{{ item['role_binding']['namespace'] | default(omit) }}"
    role: "{{ item['role_binding']['role'] | default(omit) }}"
    state: "{{ item['role_binding']['state'] | default(omit) }}"
    users: "{{ item['role_binding']['users'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_role_bindings }}"

- name: Configure sensu_go_backend_assets
  sensu.sensu_go.asset:
    annotations: "{{ item['asset']['annotations'] | default(omit) }}"
    auth: "{{ item['asset']['auth'] | default(omit) }}"
    builds: "{{ item['asset']['builds'] | default(omit) }}"
    labels: "{{ item['asset']['labels'] | default(omit) }}"
    name: "{{ item['asset']['name'] }}"
    namespace: "{{ item['asset']['namespace'] | default(omit) }}"
    state: "{{ item['asset']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_assets }}"

- name: Configure sensu_go_backend_bonsai_assets
  sensu.sensu_go.bonsai_asset:
    annotations: "{{ item['bonsai_asset']['annotations'] | default(omit) }}"
    auth: "{{ item['bonsai_asset']['auth'] | default(omit) }}"
    labels: "{{ item['bonsai_asset']['labels'] | default(omit) }}"
    name: "{{ item['bonsai_asset']['name'] }}"
    namespace: "{{ item['bonsai_asset']['namespace'] | default(omit) }}"
    rename: "{{ item['bonsai_asset']['rename'] | default(omit) }}"
    version: "{{ item['bonsai_asset']['version'] }}"
  with_items: "{{ sensu_go_backend_bonsai_assets }}"

- name: Configure sensu_go_backend_filters
  sensu.sensu_go.filter:
    action: "{{ item['filter']['action'] | default(omit) }}"
    annotations: "{{ item['filter']['annotations'] | default(omit) }}"
    auth: "{{ item['filter']['auth'] | default(omit) }}"
    expressions: "{{ item['filter']['expressions'] | default(omit) }}"
    labels: "{{ item['filter']['labels'] | default(omit) }}"
    name: "{{ item['filter']['name'] }}"
    namespace: "{{ item['filter']['namespace'] | default(omit) }}"
    runtime_assets: "{{ item['filter']['runtime_assets'] | default(omit) }}"
    state: "{{ item['filter']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_filters }}"

- name: Configure sensu_go_backend_pipe_handlers
  sensu.sensu_go.pipe_handler:
    annotations: "{{ item['pipe_handler']['annotations'] | default(omit) }}"
    auth: "{{ item['pipe_handler']['auth'] | default(omit) }}"
    command: "{{ item['pipe_handler']['command'] | default(omit) }}"
    env_vars: "{{ item['pipe_handler']['env_vars'] | default(omit) }}"
    filters: "{{ item['pipe_handler']['filters'] | default(omit) }}"
    labels: "{{ item['pipe_handler']['labels'] | default(omit) }}"
    mutator: "{{ item['pipe_handler']['mutator'] | default(omit) }}"
    name: "{{ item['pipe_handler']['name'] }}"
    namespace: "{{ item['pipe_handler']['namespace'] | default(omit) }}"
    runtime_assets: "{{ item['pipe_handler']['runtime_assets'] | default(omit) }}"
    state: "{{ item['pipe_handler']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_pipe_handlers }}"

- name: Configure sensu_go_backend_socket_handlers
  sensu.sensu_go.socket_handler:
    annotations: "{{ item['socket_handler']['annotations'] | default(omit) }}"
    auth: "{{ item['socket_handler']['auth'] | default(omit) }}"
    filters: "{{ item['socket_handler']['filters'] | default(omit) }}"
    host: "{{ item['socket_handler']['host'] | default(omit) }}"
    labels: "{{ item['socket_handler']['labels'] | default(omit) }}"
    mutator: "{{ item['socket_handler']['mutator'] | default(omit) }}"
    name: "{{ item['socket_handler']['name'] }}"
    namespace: "{{ item['socket_handler']['namespace'] | default(omit) }}"
    port: "{{ item['socket_handler']['port'] | default(omit) }}"
    state: "{{ item['socket_handler']['state'] | default(omit) }}"
    timeout: "{{ item['socket_handler']['timeout'] | default(omit) }}"
    type: "{{ item['socket_handler']['type'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_socket_handlers }}"

- name: Configure sensu_go_backend_handler_sets
  sensu.sensu_go.handler_set:
    annotations: "{{ item['handler_set']['annotations'] | default(omit) }}"
    auth: "{{ item['handler_set']['auth'] | default(omit) }}"
    handlers: "{{ item['handler_set']['handlers'] | default(omit) }}"
    labels: "{{ item['handler_set']['labels'] | default(omit) }}"
    name: "{{ item['handler_set']['name'] }}"
    namespace: "{{ item['handler_set']['namespace'] | default(omit) }}"
    state: "{{ item['handler_set']['state'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_handler_sets }}"

- name: Configure sensu_go_backend_hooks
  sensu.sensu_go.hook:
    annotations: "{{ item['hook']['annotations'] | default(omit) }}"
    auth: "{{ item['hook']['auth'] | default(omit) }}"
    command: "{{ item['hook']['command'] | default(omit) }}"
    labels: "{{ item['hook']['labels'] | default(omit) }}"
    name: "{{ item['hook']['name'] }}"
    namespace: "{{ item['hook']['namespace'] | default(omit) }}"
    runtime_assets: "{{ item['hook']['runtime_assets'] | default(omit) }}"
    state: "{{ item['hook']['state'] | default(omit) }}"
    stdin: "{{ item['hook']['stdin'] | default(omit) }}"
    timeout: "{{ item['hook']['timeout'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_hooks }}"

- name: Configure sensu_go_backend_entities
  sensu.sensu_go.entity:
    annotations: "{{ item['entity']['annotations'] | default(omit) }}"
    auth: "{{ item['entity']['auth'] | default(omit) }}"
    deregister: "{{ item['entity']['deregister'] | default(omit) }}"
    deregistration_handler: "{{ item['entity']['deregistration_handler'] | default(omit) }}"
    entity_class: "{{ item['entity']['entity_class'] | default(omit) }}"
    labels: "{{ item['entity']['labels'] | default(omit) }}"
    last_seen: "{{ item['entity']['last_seen'] | default(omit) }}"
    name: "{{ item['entity']['name'] }}"
    namespace: "{{ item['entity']['namespace'] | default(omit) }}"
    redact: "{{ item['entity']['redact'] | default(omit) }}"
    state: "{{ item['entity']['state'] | default(omit) }}"
    subscriptions: "{{ item['entity']['subscriptions'] | default(omit) }}"
    system: "{{ item['entity']['system'] | default(omit) }}"
    user: "{{ item['entity']['user'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_entities }}"

- name: Configure sensu_go_backend_checks
  sensu.sensu_go.check:
    annotations: "{{ item['check']['annotations'] | default(omit) }}"
    auth: "{{ item['check']['auth'] | default(omit) }}"
    check_hooks: "{{ item['check']['check_hooks'] | default(omit) }}"
    command: "{{ item['check']['command'] | default(omit) }}"
    cron: "{{ item['check']['cron'] | default(omit) }}"
    env_vars: "{{ item['check']['env_vars'] | default(omit) }}"
    handlers: "{{ item['check']['handlers'] | default(omit) }}"
    high_flap_threshold: "{{ item['check']['high_flap_threshold'] | default(omit) }}"
    interval: "{{ item['check']['interval'] | default(omit) }}"
    labels: "{{ item['check']['labels'] | default(omit) }}"
    low_flap_threshold: "{{ item['check']['low_flap_threshold'] | default(omit) }}"
    name: "{{ item['check']['name'] }}"
    namespace: "{{ item['check']['namespace'] | default(omit) }}"
    output_metric_format: "{{ item['check']['output_metric_format'] | default(omit) }}"
    output_metric_handlers: "{{ item['check']['output_metric_handlers'] | default(omit) }}"
    proxy_entity_name: "{{ item['check']['proxy_entity_name'] | default(omit) }}"
    proxy_requests: "{{ item['check']['proxy_requests'] | default(omit) }}"
    publish: "{{ item['check']['publish'] | default(omit) }}"
    round_robin: "{{ item['check']['round_robin'] | default(omit) }}"
    runtime_assets: "{{ item['check']['runtime_assets'] | default(omit) }}"
    state: "{{ item['check']['state'] | default(omit) }}"
    stdin: "{{ item['check']['stdin'] | default(omit) }}"
    subscriptions: "{{ item['check']['subscriptions'] | default(omit) }}"
    timeout: "{{ item['check']['timeout'] | default(omit) }}"
    ttl: "{{ item['check']['ttl'] | default(omit) }}"
  with_items: "{{ sensu_go_backend_checks }}"

- name: Configure sensu_go_backend_tessen
  sensu.sensu_go.tessen:
    auth: "{{ item['tessen']['auth'] | default(omit) }}"
    state: "{{ item['tessen']['state'] }}"
  with_items: "{{ sensu_go_backend_tessen }}"
